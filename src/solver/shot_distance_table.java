/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package solver;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Set;
import java.util.TreeSet;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;

public class shot_distance_table extends javax.swing.JFrame {
   Board board;
    Solver outer;
    /**
     * Creates new form AllRoutes
     * @param board
     * @param solv
     */
    public shot_distance_table(Board board,Solver solv) {
        this.outer=solv;
        this.board=board;
        initComponents();
        drawLabel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

       // setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setType(java.awt.Window.Type.UTILITY);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(panel);
        panel.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 743, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panel);

        jLabel1.setText("Below is the shortest distance from one location to another.");

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Rick click on the data to view all the distance and routes from one point to another");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(128, 128, 128))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel panel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   

    
    
    private void drawLabel() {
        panel.setLayout(null);
        JLabel container = new JLabel();
        container.setLayout(null);
        container.setBounds(0, 0, 80 + (13* 65), (13* 30) + 60);
        JButton cancel1 = new JButton();
        JLabel statmnt = new JLabel("Shotest distance table");
        statmnt.setBounds(0, 0, 200, 15);
        container.add(statmnt);
        cancel1.setIcon(outer.cancel);
        cancel1.setBorder(null);
        cancel1.setBounds(container.getWidth() - 50, 0, 50, 20);
        cancel1.setBackground(null);
        cancel1.setFocusCycleRoot(false);
        cancel1.setFocusable(false);
        cancel1.setFocusPainted(false);
        cancel1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                container.setVisible(false); //To change body of generated methods, choose Tools | Templates.
            }
        });
        container.add(cancel1);
        container.setOpaque(true);
        container.setBackground(Color.red);
         Solver.Drag1 drag1 = outer.new Drag1(container, board);
        JTextField names[] = new JTextField[13];
        int o = 0;
        for (String label : board.towns) {
            //JTextField name=new JTextField();
            names[o] = new JTextField();
            names[o].setName(label);
            names[o].setText(label);
            o += 1;
        }
        int i =13;
        int k = 0;
        int l = 1;
        int p = 2;
        while (i >=0) {
            l += (30 * 1);
            int g = 30;
            k += 65;
            int h = l;
            for (int j = 1; j <= i; j++) {
                JTextField field = null;
                if ((j - 1) == 0) {
                    names[i - 1].setBounds(k, l, 60, 20);
                    container.add(names[i - 1]);
                    //System.out.println(i-1+names[i-1].getText());
                    names[i - 1].setEditable(false);
                } else {
                    //System.out.println(p);
                    field = new JTextField();
                 int from = board.getTownByName(names[i - 1].getText());
                int to = board.getTownByName(names[i - p].getName());
                    Set<String> paths = new TreeSet<>();
                    int s = from;
                    int d = to;
                    outer.getGg().printAllPaths(s, d, paths);
                    field.setText(String.valueOf(board.getLowest(from, to, paths)));
                   board.addPopUp(field, from, to,board.getLowest(from, to, paths));
                    if (p < i) {
                        p += 1;
                    } else {
                        p = 2;
                    }
                    h += 30;
                    field.setBounds(k, h, 60, 20);
                    field.setEditable(false);
                    container.add(field);
                }
                container.repaint();
            }
            //System.out.println(i);
            i--;
        }
       panel.add(container);
        panel.repaint();
    }
}